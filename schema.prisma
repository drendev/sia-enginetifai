// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
}

// User table
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  picture   String   @default("test")
  role      String   @default("user")
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relational Tables
  engines      Engine[]
  transactions Transaction[]
}

// Engines
model Engine {
  id          Int      @id @default(autoincrement())
  userAdded   User     @relation(fields: [userName], references: [username])
  userName    String
  engineName  String   @unique
  engineType  String
  quantity    Int
  price       Float
  picture     String   @default("test")
  description String
  createAt    DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relational Tables
  transactions Transaction[]
}

model Transaction {
  id              Int      @id @default(autoincrement())
  user            User     @relation(fields: [transactionUser], references: [username])
  transactionUser String
  engine          Engine   @relation(fields: [engineName], references: [engineName])
  engineName      String
  quantity        Int
  totalPrice      Float
  paymentMethod   String
  delivery        Boolean
  deliveryDate    DateTime
  createAt        DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relational Tables
  deliveryInformation Delivery[]

  @@unique([id, transactionUser, paymentMethod, deliveryDate])
}

model Delivery {
  id            Int         @id @default(autoincrement())
  transaction   Transaction @relation(fields: [transactionId, transactionBy, paymentMethod, deliveryDate], references: [id, transactionUser, paymentMethod, deliveryDate])
  transactionId Int
  transactionBy String
  paymentMethod String
  deliveryDate  DateTime
  deliveryTime  String
  address       String
  city          String
  latitude      Decimal
  longitude     Decimal
  deliveryUser  String
  deliveryDone  Boolean
  createAt      DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}
